AWSTemplateFormatVersion: "2010-09-09"
Description: "Template to create a single S3 bucket with folders for Bronze, Silver, Gold, Athena Results, and Scripts stages in a Data Lake, and AWS Glue resources for data ingestion and ETL jobs, and Athena setup"

Resources:
  DataLakeBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "data-lake-demo"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ScriptBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref DataLakeBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !GetAtt GlueServiceRole.Arn
            Action:
              - "s3:GetObject"
              - "s3:ListBucket"
            Resource:
              - !Sub "arn:aws:s3:::DataLakeDemo/scripts"
              - !Sub "arn:aws:s3:::DataLakeDemo/scripts/*"

  GlueDatabase:
    Type: "AWS::Glue::Database"
    Properties:
      CatalogId: !Ref "AWS::AccountId"
      DatabaseInput:
        Name: "data_lake_db"
        Description: "Glue database for the data lake"

  GlueETLJobIngestJasmin:
    Type: "AWS::Glue::Job"
    Properties:
      Name: "data_lake_jasmin_etl_job_ingest"
      Role: !GetAtt GlueServiceRole.Arn
      Command:
        Name: "glueetl"
        ScriptLocation: !Sub "s3://DataLakeDemo/scripts/etl_api_jasmin.py"
        PythonVersion: "3"
      GlueVersion: "3.0"
      DefaultArguments:
        "--TempDir": !Sub "s3://DataLakeDemo/temp/"
        "--job-bookmark-option": "job-bookmark-enable"
        "--enable-metrics": ""
      MaxRetries: 1
      ExecutionProperty:
        MaxConcurrentRuns: 1
      Timeout: 2880

  GlueServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "glue.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "GlueServicePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:ListBucket"
                Resource:
                  - !Sub "arn:aws:s3:::DataLakeDemo/*"
              - Effect: "Allow"
                Action:
                  - "glue:*"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "tag:GetResources"
                  - "tag:TagResources"
                  - "tag:UntagResources"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "iam:CreateRole"
                  - "iam:DeleteRole"
                  - "iam:AttachRolePolicy"
                  - "iam:DetachRolePolicy"
                  - "iam:PassRole"
                  - "iam:PutRolePolicy"
                  - "iam:GetRole"
                Resource: "arn:aws:iam::*:role/DataLake-GlueServiceRole-*"
              - Effect: "Allow"
                Action:
                  - "athena:CreateWorkGroup"
                  - "athena:GetWorkGroup"
                  - "athena:UpdateWorkGroup"
                  - "athena:DeleteWorkGroup"
                  - "athena:ListWorkGroups"
                Resource: "*"

  BronzeCrawler:
    Type: "AWS::Glue::Crawler"
    Properties:
      Name: "ingest_bronze_jasmin_data"
      Role: !GetAtt GlueServiceRole.Arn
      DatabaseName: "data_lake_db"
      Targets:
        S3Targets:
          - Path: "s3://DataLakeDemo/bronze/"

  SilverCrawler:
    Type: "AWS::Glue::Crawler"
    Properties:
      Name: "ingest_silver_jasmin_data"
      Role: !GetAtt GlueServiceRole.Arn
      DatabaseName: "data_lake_db"
      Targets:
        S3Targets:
          - Path: "s3://DataLakeDemo/silver/"

  GoldCrawler:
    Type: "AWS::Glue::Crawler"
    Properties:
      Name: "ingest_gold_jasmin_data"
      Role: !GetAtt GlueServiceRole.Arn
      DatabaseName: "data_lake_db"
      Targets:
        S3Targets:
          - Path: "s3://DataLakeDemo/gold/"

  AthenaWorkGroup:
    Type: "AWS::Athena::WorkGroup"
    Properties:
      Name: "data-lake-workgroup"
      State: "ENABLED"
      Description: "Work group for Data Lake queries"
      WorkGroupConfiguration:
        BytesScannedCutoffPerQuery: 1000000000
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: true
        RequesterPaysEnabled: false
        ResultConfiguration:
          OutputLocation: "s3://DataLakeDemo/athena-results/"

Outputs:
  DataLakeBucketName:
    Description: "Name of the Data Lake S3 bucket"
    Value: !Ref DataLakeBucket

  GlueDatabaseName:
    Description: "Name of the Glue database"
    Value: !Ref GlueDatabase

  GlueETLJobJasminIngestName:
    Description: "Name of the Glue ETL job for ingesting data from Jasmin API"
    Value: !Ref GlueETLJobIngestJasmin

  BronzeCrawlerName:
    Description: "Name of the Glue Crawler for the Bronze data"
    Value: !Ref BronzeCrawler

  SilverCrawlerName:
    Description: "Name of the Glue Crawler for the Silver data"
    Value: !Ref SilverCrawler

  GoldCrawlerName:
    Description: "Name of the Glue Crawler for the Gold data"
    Value: !Ref GoldCrawler

  AthenaWorkGroupName:
    Description: "Name of the Athena work group"
    Value: !Ref AthenaWorkGroup
